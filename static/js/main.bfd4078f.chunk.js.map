{"version":3,"sources":["components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivatRoute.js","components/PublicRoute.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-actions.js"],"names":["Navigation","isAuthentificated","useSelector","authSelectors","getIsAuthenticated","className","exact","to","activeClassName","UserMenu","dispatch","useDispatch","email","getUserEmail","onLogout","useCallback","authOperations","logOut","Button","variant","color","type","onClick","AuthNav","MyAppBar","AppBar","position","Container","PrivatRoute","redirectTo","children","routeProps","isLoggedIn","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","PhonebookView","App","useEffect","getCurrentUser","CssBaseline","fallback","path","contactsReducer","createReducer","fetchContactsSuccess","_","payload","addNewContactSuccess","state","deleteContactSuccess","filter","id","filterReducer","changeFilter","loading","fetchContactsRequest","fetchContactsError","addNewContactRequest","addNewContactError","deleteContactRequest","deleteContactError","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","user","authActions","token","error","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","message","logIn","logoutnError","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.bfd4078f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport './Navigation.scss';\r\n\r\nexport default function Navigation() {\r\n  const isAuthentificated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <nav className=\"Navigation\">\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink--active\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n      {isAuthentificated && (\r\n        <NavLink\r\n          exact\r\n          to=\"/contacts\"\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth/';\r\nimport Button from '@material-ui/core/Button';\r\nimport './UserMenu.scss';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(authSelectors.getUserEmail);\r\n\r\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"UserMenu\">\r\n      <p className=\"UserMenu__title\">\r\n        Welcome, <span className=\"UserMenu__email\">{email}</span>\r\n      </p>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        type=\"button\"\r\n        onClick={onLogout}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './AuthNav.scss';\r\n\r\nconst AuthNav = () => (\r\n  <div className=\"AuthNav\">\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport './AppBar.scss';\r\n\r\nexport default function MyAppBar() {\r\n  const isAuthentificated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container>\r\n        <header className=\"header__container\">\r\n          <Navigation />\r\n          {isAuthentificated ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivatRoute({\r\n  isAuthentificated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  isAuthentificated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport MyAppBar from './components/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivatRoute from './components/PrivatRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nconst HomeView = lazy(\n  () => import('./views/HomeView') /* webpackChunkName: \"HomeView\" */,\n);\nconst RegisterView = lazy(\n  () => import('./views/RegisterView') /* webpackChunkName: \"RegisterView\" */,\n);\nconst LoginView = lazy(\n  () => import('./views/LoginView') /* webpackChunkName: \"LoginView\" */,\n);\nconst PhonebookView = lazy(\n  () => import('./views/PhonebookView') /* webpackChunkName: \"PhonebookView\" */,\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <CssBaseline />\n\n      <MyAppBar />\n      <Container>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n              <RegisterView />\n            </PublicRoute>\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LoginView />\n            </PublicRoute>\n            <PrivatRoute path=\"/contacts\" redirectTo=\"/login\">\n              <PhonebookView />\n            </PrivatRoute>\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  addNewContactRequest,\n  addNewContactSuccess,\n  addNewContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\nconst contactsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addNewContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addNewContactRequest]: () => true,\n  [addNewContactSuccess]: () => false,\n  [addNewContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  loading: loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from '../auth/auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthentificated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ user, isAuthentificated, token, error });\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutnError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthentificated;\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\n// eslint-disable-next-line\r\nexport default { getIsAuthenticated, getUserEmail };\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addNewContactRequest = createAction(\n  'contacts/addNewContactRequest',\n);\nexport const addNewContactSuccess = createAction(\n  'contacts/addNewContactSuccess',\n);\nexport const addNewContactError = createAction('contacts/addNewContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/ChangeContactsFilter');\n"],"sourceRoot":""}